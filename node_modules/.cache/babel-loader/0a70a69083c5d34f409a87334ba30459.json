{"remainingRequest":"/Users/driedbambosh/code house/My-Blog/blog-border/vue-admin-template/node_modules/babel-loader/lib/index.js!/Users/driedbambosh/code house/My-Blog/blog-border/vue-admin-template/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/driedbambosh/code house/My-Blog/blog-border/vue-admin-template/src/permission.js","dependencies":[{"path":"/Users/driedbambosh/code house/My-Blog/blog-border/vue-admin-template/src/permission.js","mtime":1632471187429},{"path":"/Users/driedbambosh/code house/My-Blog/blog-border/vue-admin-template/node_modules/cache-loader/dist/cjs.js","mtime":1632304425990},{"path":"/Users/driedbambosh/code house/My-Blog/blog-border/vue-admin-template/node_modules/babel-loader/lib/index.js","mtime":1632304426592},{"path":"/Users/driedbambosh/code house/My-Blog/blog-border/vue-admin-template/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1632304426170}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9kcmllZGJhbWJvc2gvY29kZSBob3VzZS9NeS1CbG9nL2Jsb2ctYm9yZGVyL3Z1ZS1hZG1pbi10ZW1wbGF0ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCByb3V0ZXIgZnJvbSAnLi9yb3V0ZXInOwppbXBvcnQgc3RvcmUgZnJvbSAnLi9zdG9yZSc7CmltcG9ydCB7IE1lc3NhZ2UgfSBmcm9tICdlbGVtZW50LXVpJzsKaW1wb3J0IE5Qcm9ncmVzcyBmcm9tICducHJvZ3Jlc3MnOyAvLyBwcm9ncmVzcyBiYXIKCmltcG9ydCAnbnByb2dyZXNzL25wcm9ncmVzcy5jc3MnOyAvLyBwcm9ncmVzcyBiYXIgc3R5bGUKCmltcG9ydCB7IGdldFRva2VuIH0gZnJvbSAnQC91dGlscy9hdXRoJzsgLy8gZ2V0IHRva2VuIGZyb20gY29va2llCgppbXBvcnQgZ2V0UGFnZVRpdGxlIGZyb20gJ0AvdXRpbHMvZ2V0LXBhZ2UtdGl0bGUnOwpOUHJvZ3Jlc3MuY29uZmlndXJlKHsKICBzaG93U3Bpbm5lcjogZmFsc2UKfSk7IC8vIE5Qcm9ncmVzcyBDb25maWd1cmF0aW9uCgp2YXIgd2hpdGVMaXN0ID0gWycvbG9naW4nXTsgLy8gbm8gcmVkaXJlY3Qgd2hpdGVsaXN0Cgpyb3V0ZXIuYmVmb3JlRWFjaCggLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSh0bywgZnJvbSwgbmV4dCkgewogICAgdmFyIGhhc1Rva2VuLCBoYXNHZXRVc2VySW5mbzsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgLy8gc3RhcnQgcHJvZ3Jlc3MgYmFyCiAgICAgICAgICAgIE5Qcm9ncmVzcy5zdGFydCgpOyAvLyBzZXQgcGFnZSB0aXRsZQoKICAgICAgICAgICAgZG9jdW1lbnQudGl0bGUgPSBnZXRQYWdlVGl0bGUodG8ubWV0YS50aXRsZSk7IC8vIGRldGVybWluZSB3aGV0aGVyIHRoZSB1c2VyIGhhcyBsb2dnZWQgaW4g6Lev55Sx5a6I5Y2r5a+86IiqCgogICAgICAgICAgICBoYXNUb2tlbiA9IGdldFRva2VuKCk7CgogICAgICAgICAgICBpZiAoaGFzVG9rZW4pIHsKICAgICAgICAgICAgICBpZiAodG8ucGF0aCA9PT0gJy9sb2dpbicpIHsKICAgICAgICAgICAgICAgIC8vIGlmIGlzIGxvZ2dlZCBpbiwgcmVkaXJlY3QgdG8gdGhlIGhvbWUgcGFnZQogICAgICAgICAgICAgICAgbmV4dCh7CiAgICAgICAgICAgICAgICAgIHBhdGg6ICcvJwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBOUHJvZ3Jlc3MuZG9uZSgpOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBoYXNHZXRVc2VySW5mbyA9IHN0b3JlLmdldHRlcnMubmFtZTsKICAgICAgICAgICAgICAgIG5leHQoKTsgLy/ojrflj5bnlKjmiLfkv6Hmga8KICAgICAgICAgICAgICAgIC8vIGlmIChoYXNHZXRVc2VySW5mbykgewogICAgICAgICAgICAgICAgLy8gICBuZXh0KCkKICAgICAgICAgICAgICAgIC8vIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAvLyAgIHRyeSB7CiAgICAgICAgICAgICAgICAvLyAgICAgLy8gZ2V0IHVzZXIgaW5mbwogICAgICAgICAgICAgICAgLy8gICAgIGF3YWl0IHN0b3JlLmRpc3BhdGNoKCd1c2VyL2dldEluZm8nKQogICAgICAgICAgICAgICAgLy8gICAgIG5leHQoKQogICAgICAgICAgICAgICAgLy8gICB9IGNhdGNoIChlcnJvcikgewogICAgICAgICAgICAgICAgLy8gICAgIC8vIHJlbW92ZSB0b2tlbiBhbmQgZ28gdG8gbG9naW4gcGFnZSB0byByZS1sb2dpbgogICAgICAgICAgICAgICAgLy8gICAgIGF3YWl0IHN0b3JlLmRpc3BhdGNoKCd1c2VyL3Jlc2V0VG9rZW4nKQogICAgICAgICAgICAgICAgLy8gICAgIE1lc3NhZ2UuZXJyb3IoZXJyb3IgfHwgJ0hhcyBFcnJvcicpCiAgICAgICAgICAgICAgICAvLyAgICAgbmV4dChgL2xvZ2luP3JlZGlyZWN0PSR7dG8ucGF0aH1gKQogICAgICAgICAgICAgICAgLy8gICAgIE5Qcm9ncmVzcy5kb25lKCkKICAgICAgICAgICAgICAgIC8vICAgfQogICAgICAgICAgICAgICAgLy8gfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAvKiBoYXMgbm8gdG9rZW4qLwogICAgICAgICAgICAgIGlmICh3aGl0ZUxpc3QuaW5kZXhPZih0by5wYXRoKSAhPT0gLTEpIHsKICAgICAgICAgICAgICAgIC8vIGluIHRoZSBmcmVlIGxvZ2luIHdoaXRlbGlzdCwgZ28gZGlyZWN0bHkKICAgICAgICAgICAgICAgIG5leHQoKTsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgLy8gb3RoZXIgcGFnZXMgdGhhdCBkbyBub3QgaGF2ZSBwZXJtaXNzaW9uIHRvIGFjY2VzcyBhcmUgcmVkaXJlY3RlZCB0byB0aGUgbG9naW4gcGFnZS4KICAgICAgICAgICAgICAgIG5leHQoIi9sb2dpbj9yZWRpcmVjdD0iLmNvbmNhdCh0by5wYXRoKSk7CiAgICAgICAgICAgICAgICBOUHJvZ3Jlc3MuZG9uZSgpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiAoX3gsIF94MiwgX3gzKSB7CiAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKSk7CnJvdXRlci5hZnRlckVhY2goZnVuY3Rpb24gKCkgewogIC8vIGZpbmlzaCBwcm9ncmVzcyBiYXIKICBOUHJvZ3Jlc3MuZG9uZSgpOwp9KTs="},{"version":3,"sources":["/Users/driedbambosh/code house/My-Blog/blog-border/vue-admin-template/src/permission.js"],"names":["router","store","Message","NProgress","getToken","getPageTitle","configure","showSpinner","whiteList","beforeEach","to","from","next","start","document","title","meta","hasToken","path","done","hasGetUserInfo","getters","name","indexOf","afterEach"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,SAAP,MAAsB,WAAtB,C,CAAkC;;AAClC,OAAO,yBAAP,C,CAAiC;;AACjC,SAASC,QAAT,QAAyB,cAAzB,C,CAAwC;;AACxC,OAAOC,YAAP,MAAyB,wBAAzB;AAEAF,SAAS,CAACG,SAAV,CAAoB;AAAEC,EAAAA,WAAW,EAAE;AAAf,CAApB,E,CAA4C;;AAE5C,IAAMC,SAAS,GAAG,CAAC,QAAD,CAAlB,C,CAA6B;;AAE7BR,MAAM,CAACS,UAAP;AAAA,qEAAkB,iBAAMC,EAAN,EAAUC,IAAV,EAAgBC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAChB;AACAT,YAAAA,SAAS,CAACU,KAAV,GAFgB,CAIhB;;AACAC,YAAAA,QAAQ,CAACC,KAAT,GAAiBV,YAAY,CAACK,EAAE,CAACM,IAAH,CAAQD,KAAT,CAA7B,CALgB,CAOhB;;AACME,YAAAA,QARU,GAQCb,QAAQ,EART;;AAUhB,gBAAIa,QAAJ,EAAc;AACZ,kBAAIP,EAAE,CAACQ,IAAH,KAAY,QAAhB,EAA0B;AACxB;AACAN,gBAAAA,IAAI,CAAC;AAAEM,kBAAAA,IAAI,EAAE;AAAR,iBAAD,CAAJ;AACAf,gBAAAA,SAAS,CAACgB,IAAV;AACD,eAJD,MAIO;AACCC,gBAAAA,cADD,GACkBnB,KAAK,CAACoB,OAAN,CAAcC,IADhC;AAELV,gBAAAA,IAAI,GAFC,CAGL;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACF,aA1BD,MA0BO;AACL;AAEA,kBAAIJ,SAAS,CAACe,OAAV,CAAkBb,EAAE,CAACQ,IAArB,MAA+B,CAAC,CAApC,EAAuC;AACrC;AACAN,gBAAAA,IAAI;AACL,eAHD,MAGO;AACL;AACAA,gBAAAA,IAAI,2BAAoBF,EAAE,CAACQ,IAAvB,EAAJ;AACAf,gBAAAA,SAAS,CAACgB,IAAV;AACD;AACF;;AA/Ce;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA;AAkDAnB,MAAM,CAACwB,SAAP,CAAiB,YAAM;AACrB;AACArB,EAAAA,SAAS,CAACgB,IAAV;AACD,CAHD","sourcesContent":["import router from './router'\nimport store from './store'\nimport { Message } from 'element-ui'\nimport NProgress from 'nprogress' // progress bar\nimport 'nprogress/nprogress.css' // progress bar style\nimport { getToken } from '@/utils/auth' // get token from cookie\nimport getPageTitle from '@/utils/get-page-title'\n\nNProgress.configure({ showSpinner: false }) // NProgress Configuration\n\nconst whiteList = ['/login'] // no redirect whitelist\n\nrouter.beforeEach(async(to, from, next) => {\n  // start progress bar\n  NProgress.start()\n\n  // set page title\n  document.title = getPageTitle(to.meta.title)\n\n  // determine whether the user has logged in 路由守卫导航\n  const hasToken = getToken()\n\n  if (hasToken) {\n    if (to.path === '/login') {\n      // if is logged in, redirect to the home page\n      next({ path: '/' })\n      NProgress.done()\n    } else {\n      const hasGetUserInfo = store.getters.name\n      next()\n      //获取用户信息\n      // if (hasGetUserInfo) {\n      //   next()\n      // } else {\n      //   try {\n      //     // get user info\n      //     await store.dispatch('user/getInfo')\n\n      //     next()\n      //   } catch (error) {\n      //     // remove token and go to login page to re-login\n      //     await store.dispatch('user/resetToken')\n      //     Message.error(error || 'Has Error')\n      //     next(`/login?redirect=${to.path}`)\n      //     NProgress.done()\n      //   }\n      // }\n    }\n  } else {\n    /* has no token*/\n\n    if (whiteList.indexOf(to.path) !== -1) {\n      // in the free login whitelist, go directly\n      next()\n    } else {\n      // other pages that do not have permission to access are redirected to the login page.\n      next(`/login?redirect=${to.path}`)\n      NProgress.done()\n    }\n  }\n})\n\nrouter.afterEach(() => {\n  // finish progress bar\n  NProgress.done()\n})\n"]}]}